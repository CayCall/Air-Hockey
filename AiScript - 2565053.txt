using System;
using System.Collections;
using System.Collections.Generic;
using Unity.VisualScripting;
using UnityEngine;
using Random = UnityEngine.Random;

public class AiScript : MonoBehaviour
{
    public float MaxMovementSpeed;
    private Rigidbody2D rb;
    private Vector2 startingPosition;

    public Rigidbody2D Puck;

    public Transform PlayerBoundaryHolder;
    private Boundary playerBoundary;

    public Transform PuckBoundaryHolder;
    private Boundary puckBoundary;

    private Vector2 targetPosition;

    private bool FirstTimeinOpponentsHalf = true;
    private float OffsetXFromTarget;
        
    
    // Start is called before the first frame update
   private void Start()
   {
       
       rb = GetComponent<Rigidbody2D>();
       startingPosition = rb.position;
       
       playerBoundary = new Boundary(PlayerBoundaryHolder.GetChild(0).position.y,
           PlayerBoundaryHolder.GetChild(1).position.y,
           PlayerBoundaryHolder.GetChild(2).position.x,
           PlayerBoundaryHolder.GetChild(3).position.x);
       
       puckBoundary= new Boundary(PuckBoundaryHolder.GetChild(0).position.y,
           PuckBoundaryHolder.GetChild(1).position.y,
           PuckBoundaryHolder.GetChild(2).position.x,
           PuckBoundaryHolder.GetChild(3).position.x);
   }

    // Update is called once per frame
   private void FixedUpdate()
   {
       if (!PuckScript.Goal)
       {
           float movementSpeed;
           if (Puck.position.y < puckBoundary.Down)
           {
               if (FirstTimeinOpponentsHalf)
               {
                   FirstTimeinOpponentsHalf = false;
                   OffsetXFromTarget = Random.Range(-3f, 3f);
               }
           
               movementSpeed = MaxMovementSpeed * Random.Range(0.1f, 0.5f);
               targetPosition = new Vector2(Mathf.Clamp(Puck.position.x + OffsetXFromTarget, playerBoundary.Left, playerBoundary.Right),
                   startingPosition.y);
           }
           else
           {
               FirstTimeinOpponentsHalf = true;
               movementSpeed = Random.Range(MaxMovementSpeed * 0.60f, MaxMovementSpeed);
               targetPosition = new Vector2(Mathf.Clamp(Puck.position.x, playerBoundary.Left, playerBoundary.Right),
                   Mathf.Clamp(Puck.position.y, playerBoundary.Down, playerBoundary.Up));
           }
           rb.MovePosition(Vector2.MoveTowards(rb.position, targetPosition, movementSpeed * Time.fixedDeltaTime));
       }

   }

   public void ResetAiPaddle()
   {
       rb.position = startingPosition;
   }
   
}
